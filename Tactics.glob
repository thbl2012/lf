DIGEST 9d559ef01db9500b569f6f143551baec
FLF.Tactics
R666:669 LF.Poly <> <> lib
prf 945:950 <> silly1
R972:974 Coq.Init.Datatypes <> nat ind
R988:997 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1011:1019 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1025:1027 Coq.Init.Logic <> :type_scope:x_'='_x not
R1020:1020 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1022:1022 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1024:1024 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1021:1021 LF.Tactics <> n var
R1023:1023 LF.Tactics <> o var
R1028:1028 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1030:1030 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1032:1032 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1029:1029 LF.Tactics <> m var
R1031:1031 LF.Tactics <> p var
R1003:1005 Coq.Init.Logic <> :type_scope:x_'='_x not
R998:998 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1000:1000 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1002:1002 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R999:999 LF.Tactics <> n var
R1001:1001 LF.Tactics <> o var
R1006:1006 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1008:1008 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1010:1010 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1007:1007 LF.Tactics <> n var
R1009:1009 LF.Tactics <> p var
R984:986 Coq.Init.Logic <> :type_scope:x_'='_x not
R983:983 LF.Tactics <> n var
R987:987 LF.Tactics <> m var
prf 1556:1561 <> silly2
R1583:1585 Coq.Init.Datatypes <> nat ind
R1599:1608 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1609:1609 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1652:1661 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1667:1669 Coq.Init.Logic <> :type_scope:x_'='_x not
R1662:1662 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1664:1664 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1666:1666 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1663:1663 LF.Tactics <> n var
R1665:1665 LF.Tactics <> o var
R1670:1670 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1672:1672 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1674:1674 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1671:1671 LF.Tactics <> m var
R1673:1673 LF.Tactics <> p var
R1624:1626 Coq.Init.Datatypes <> nat ind
R1635:1638 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1644:1646 Coq.Init.Logic <> :type_scope:x_'='_x not
R1639:1639 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1641:1641 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1643:1643 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1640:1640 LF.Tactics <> q var
R1642:1642 LF.Tactics <> o var
R1647:1647 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1649:1649 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1651:1651 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1648:1648 LF.Tactics <> r var
R1650:1650 LF.Tactics <> p var
R1631:1633 Coq.Init.Logic <> :type_scope:x_'='_x not
R1630:1630 LF.Tactics <> q var
R1634:1634 LF.Tactics <> r var
R1595:1597 Coq.Init.Logic <> :type_scope:x_'='_x not
R1594:1594 LF.Tactics <> n var
R1598:1598 LF.Tactics <> m var
prf 2185:2191 <> silly2a
R2209:2211 Coq.Init.Datatypes <> nat ind
R2233:2242 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2243:2243 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2290:2299 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2303:2305 Coq.Init.Logic <> :type_scope:x_'='_x not
R2300:2300 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2302:2302 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2301:2301 LF.Tactics <> n var
R2306:2306 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2308:2308 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2307:2307 LF.Tactics <> m var
R2258:2260 Coq.Init.Datatypes <> nat ind
R2277:2280 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2284:2286 Coq.Init.Logic <> :type_scope:x_'='_x not
R2281:2281 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2283:2283 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2282:2282 LF.Tactics <> q var
R2287:2287 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2289:2289 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2288:2288 LF.Tactics <> r var
R2269:2271 Coq.Init.Logic <> :type_scope:x_'='_x not
R2264:2264 LF.Poly <> ::'('_x_','_x_')' not
R2266:2266 LF.Poly <> ::'('_x_','_x_')' not
R2268:2268 LF.Poly <> ::'('_x_','_x_')' not
R2265:2265 LF.Tactics <> q var
R2267:2267 LF.Tactics <> q var
R2272:2272 LF.Poly <> ::'('_x_','_x_')' not
R2274:2274 LF.Poly <> ::'('_x_','_x_')' not
R2276:2276 LF.Poly <> ::'('_x_','_x_')' not
R2273:2273 LF.Tactics <> r var
R2275:2275 LF.Tactics <> r var
R2225:2227 Coq.Init.Logic <> :type_scope:x_'='_x not
R2220:2220 LF.Poly <> ::'('_x_','_x_')' not
R2222:2222 LF.Poly <> ::'('_x_','_x_')' not
R2224:2224 LF.Poly <> ::'('_x_','_x_')' not
R2221:2221 LF.Tactics <> n var
R2223:2223 LF.Tactics <> n var
R2228:2228 LF.Poly <> ::'('_x_','_x_')' not
R2230:2230 LF.Poly <> ::'('_x_','_x_')' not
R2232:2232 LF.Poly <> ::'('_x_','_x_')' not
R2229:2229 LF.Tactics <> m var
R2231:2231 LF.Tactics <> m var
prf 2491:2498 <> silly_ex
R2507:2507 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2553:2562 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2576:2584 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2592:2594 Coq.Init.Logic <> :type_scope:x_'='_x not
R2585:2589 LF.Basics <> evenb def
R2595:2598 LF.Basics <> true constr
R2569:2571 Coq.Init.Logic <> :type_scope:x_'='_x not
R2563:2566 LF.Basics <> oddb def
R2572:2575 LF.Basics <> true constr
R2532:2535 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2546:2548 Coq.Init.Logic <> :type_scope:x_'='_x not
R2536:2539 LF.Basics <> oddb def
R2542:2542 Coq.Init.Datatypes <> S constr
R2544:2544 LF.Tactics <> n var
R2549:2552 LF.Basics <> true constr
R2525:2527 Coq.Init.Logic <> :type_scope:x_'='_x not
R2518:2522 LF.Basics <> evenb def
R2524:2524 LF.Tactics <> n var
R2528:2531 LF.Basics <> true constr
prf 2886:2900 <> silly3_firsttry
R2916:2918 Coq.Init.Datatypes <> nat ind
R2945:2954 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2974:2976 Coq.Init.Logic <> :type_scope:x_'='_x not
R2955:2961 LF.Basics <> beq_nat def
R2964:2964 Coq.Init.Datatypes <> S constr
R2967:2967 Coq.Init.Datatypes <> S constr
R2969:2969 LF.Tactics <> n var
R2977:2980 LF.Basics <> true constr
R2931:2933 Coq.Init.Logic <> :type_scope:x_'='_x not
R2927:2930 LF.Basics <> true constr
R2934:2940 LF.Basics <> beq_nat def
R2942:2942 LF.Tactics <> n var
prf 3522:3534 <> rev_exercise1
R3553:3556 LF.Poly <> list ind
R3558:3560 Coq.Init.Datatypes <> nat ind
R3579:3587 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3590:3592 Coq.Init.Logic <> :type_scope:x_'='_x not
R3588:3589 LF.Tactics <> l' var
R3593:3595 LF.Poly <> rev def
R3597:3597 LF.Tactics <> l var
R3570:3572 Coq.Init.Logic <> :type_scope:x_'='_x not
R3569:3569 LF.Tactics <> l var
R3573:3575 LF.Poly <> rev def
R3577:3578 LF.Tactics <> l' var
R3668:3681 LF.Poly <> rev_involutive thm
R3668:3681 LF.Poly <> rev_involutive thm
def 4150:4165 <> trans_eq_example
R4191:4193 Coq.Init.Datatypes <> nat ind
R4215:4223 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4237:4245 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4251:4253 Coq.Init.Logic <> :type_scope:x_'='_x not
R4246:4246 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4248:4248 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4250:4250 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4247:4247 LF.Tactics <> a var
R4249:4249 LF.Tactics <> b var
R4254:4254 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4256:4256 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4258:4258 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4255:4255 LF.Tactics <> e var
R4257:4257 LF.Tactics <> f var
R4229:4231 Coq.Init.Logic <> :type_scope:x_'='_x not
R4224:4224 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4226:4226 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4228:4228 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4225:4225 LF.Tactics <> c var
R4227:4227 LF.Tactics <> d var
R4232:4232 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4234:4234 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4236:4236 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4233:4233 LF.Tactics <> e var
R4235:4235 LF.Tactics <> f var
R4207:4209 Coq.Init.Logic <> :type_scope:x_'='_x not
R4202:4202 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4204:4204 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4206:4206 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4203:4203 LF.Tactics <> a var
R4205:4205 LF.Tactics <> b var
R4210:4210 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4212:4212 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4214:4214 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4211:4211 LF.Tactics <> c var
R4213:4213 LF.Tactics <> d var
prf 4515:4522 <> trans_eq
R4551:4551 LF.Tactics <> X var
R4562:4565 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4571:4574 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4576:4578 Coq.Init.Logic <> :type_scope:x_'='_x not
R4575:4575 LF.Tactics <> n var
R4579:4579 LF.Tactics <> o var
R4567:4569 Coq.Init.Logic <> :type_scope:x_'='_x not
R4566:4566 LF.Tactics <> m var
R4570:4570 LF.Tactics <> o var
R4558:4560 Coq.Init.Logic <> :type_scope:x_'='_x not
R4557:4557 LF.Tactics <> n var
R4561:4561 LF.Tactics <> m var
def 4834:4850 <> trans_eq_example'
R4876:4878 Coq.Init.Datatypes <> nat ind
R4900:4908 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4922:4930 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4936:4938 Coq.Init.Logic <> :type_scope:x_'='_x not
R4931:4931 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4933:4933 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4935:4935 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4932:4932 LF.Tactics <> a var
R4934:4934 LF.Tactics <> b var
R4939:4939 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4941:4941 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4943:4943 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4940:4940 LF.Tactics <> e var
R4942:4942 LF.Tactics <> f var
R4914:4916 Coq.Init.Logic <> :type_scope:x_'='_x not
R4909:4909 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4911:4911 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4913:4913 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4910:4910 LF.Tactics <> c var
R4912:4912 LF.Tactics <> d var
R4917:4917 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4919:4919 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4921:4921 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4918:4918 LF.Tactics <> e var
R4920:4920 LF.Tactics <> f var
R4892:4894 Coq.Init.Logic <> :type_scope:x_'='_x not
R4887:4887 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4889:4889 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4891:4891 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4888:4888 LF.Tactics <> a var
R4890:4890 LF.Tactics <> b var
R4895:4895 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4897:4897 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4899:4899 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4896:4896 LF.Tactics <> c var
R4898:4898 LF.Tactics <> d var
R5414:5414 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5416:5416 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5418:5418 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5396:5403 LF.Tactics <> trans_eq thm
R5414:5414 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5416:5416 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5418:5418 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5396:5403 LF.Tactics <> trans_eq thm
def 5750:5766 <> trans_eq_exercise
R5788:5790 Coq.Init.Datatypes <> nat ind
R5815:5823 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5835:5843 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5844:5844 Coq.Init.Logic <> :type_scope:x_'='_x not
R5850:5854 Coq.Init.Logic <> :type_scope:x_'='_x not
R5865:5865 Coq.Init.Logic <> :type_scope:x_'='_x not
R5846:5848 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5845:5845 LF.Tactics <> n var
R5849:5849 LF.Tactics <> p var
R5855:5862 LF.Basics <> minustwo def
R5864:5864 LF.Tactics <> o var
R5824:5824 Coq.Init.Logic <> :type_scope:x_'='_x not
R5830:5833 Coq.Init.Logic <> :type_scope:x_'='_x not
R5826:5828 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5825:5825 LF.Tactics <> n var
R5829:5829 LF.Tactics <> p var
R5834:5834 LF.Tactics <> m var
R5800:5803 Coq.Init.Logic <> :type_scope:x_'='_x not
R5814:5814 Coq.Init.Logic <> :type_scope:x_'='_x not
R5799:5799 LF.Tactics <> m var
R5804:5811 LF.Basics <> minustwo def
R5813:5813 LF.Tactics <> o var
R5914:5921 LF.Tactics <> trans_eq thm
R5914:5921 LF.Tactics <> trans_eq thm
prf 7441:7451 <> S_injective
R7469:7471 Coq.Init.Datatypes <> nat ind
R7486:7491 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7493:7495 Coq.Init.Logic <> :type_scope:x_'='_x not
R7492:7492 LF.Tactics <> n var
R7496:7496 LF.Tactics <> m var
R7480:7482 Coq.Init.Logic <> :type_scope:x_'='_x not
R7477:7477 Coq.Init.Datatypes <> S constr
R7479:7479 LF.Tactics <> n var
R7483:7483 Coq.Init.Datatypes <> S constr
R7485:7485 LF.Tactics <> m var
prf 7991:8003 <> inversion_ex1
R8023:8025 Coq.Init.Datatypes <> nat ind
R8046:8051 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8055:8057 Coq.Init.Logic <> :type_scope:x_'='_x not
R8052:8052 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8054:8054 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8053:8053 LF.Tactics <> n var
R8058:8058 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8060:8060 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8059:8059 LF.Tactics <> m var
R8037:8039 Coq.Init.Logic <> :type_scope:x_'='_x not
R8031:8031 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8033:8034 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8036:8036 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8032:8032 LF.Tactics <> n var
R8035:8035 LF.Tactics <> m var
R8040:8040 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8042:8043 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8045:8045 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8041:8041 LF.Tactics <> o var
R8044:8044 LF.Tactics <> o var
prf 8218:8230 <> inversion_ex2
R8248:8250 Coq.Init.Datatypes <> nat ind
R8265:8270 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8272:8274 Coq.Init.Logic <> :type_scope:x_'='_x not
R8271:8271 LF.Tactics <> n var
R8275:8275 LF.Tactics <> m var
R8259:8261 Coq.Init.Logic <> :type_scope:x_'='_x not
R8256:8256 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8258:8258 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8257:8257 LF.Tactics <> n var
R8262:8262 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8264:8264 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8263:8263 LF.Tactics <> m var
def 8397:8409 <> inversion_ex3
R8442:8442 LF.Tactics <> X var
R8452:8455 LF.Poly <> list ind
R8457:8457 LF.Tactics <> X var
R8488:8493 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8509:8514 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8516:8518 Coq.Init.Logic <> :type_scope:x_'='_x not
R8515:8515 LF.Tactics <> x var
R8519:8519 LF.Tactics <> y var
R8500:8502 Coq.Init.Logic <> :type_scope:x_'='_x not
R8495:8498 LF.Poly <> ::x_'::'_x not
R8494:8494 LF.Tactics <> x var
R8499:8499 LF.Tactics <> l var
R8504:8507 LF.Poly <> ::x_'::'_x not
R8503:8503 LF.Tactics <> z var
R8508:8508 LF.Tactics <> j var
R8474:8476 Coq.Init.Logic <> :type_scope:x_'='_x not
R8464:8467 LF.Poly <> ::x_'::'_x not
R8463:8463 LF.Tactics <> x var
R8469:8472 LF.Poly <> ::x_'::'_x not
R8468:8468 LF.Tactics <> y var
R8473:8473 LF.Tactics <> l var
R8478:8481 LF.Poly <> ::x_'::'_x not
R8477:8477 LF.Tactics <> w var
R8483:8486 LF.Poly <> ::x_'::'_x not
R8482:8482 LF.Tactics <> z var
R8487:8487 LF.Tactics <> j var
prf 8812:8822 <> beq_nat_0_l
R8857:8860 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8862:8864 Coq.Init.Logic <> :type_scope:x_'='_x not
R8861:8861 LF.Tactics <> n var
R8850:8852 Coq.Init.Logic <> :type_scope:x_'='_x not
R8839:8845 LF.Basics <> beq_nat def
R8849:8849 LF.Tactics <> n var
R8853:8856 LF.Basics <> true constr
prf 9760:9772 <> inversion_ex4
R9788:9790 Coq.Init.Datatypes <> nat ind
R9803:9808 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9814:9816 Coq.Init.Logic <> :type_scope:x_'='_x not
R9810:9812 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R9799:9801 Coq.Init.Logic <> :type_scope:x_'='_x not
R9796:9796 Coq.Init.Datatypes <> S constr
R9798:9798 LF.Tactics <> n var
R9802:9802 Coq.Init.Datatypes <> O constr
prf 9878:9890 <> inversion_ex5
R9908:9910 Coq.Init.Datatypes <> nat ind
R9928:9933 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9937:9939 Coq.Init.Logic <> :type_scope:x_'='_x not
R9934:9934 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9936:9936 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9935:9935 LF.Tactics <> n var
R9940:9940 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9942:9942 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9941:9941 LF.Tactics <> m var
R9921:9923 Coq.Init.Logic <> :type_scope:x_'='_x not
R9916:9920 LF.Basics <> false constr
R9924:9927 LF.Basics <> true constr
def 10454:10466 <> inversion_ex6
R10523:10523 LF.Tactics <> X var
R10533:10536 LF.Poly <> list ind
R10538:10538 LF.Tactics <> X var
R10560:10565 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10581:10586 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10588:10590 Coq.Init.Logic <> :type_scope:x_'='_x not
R10587:10587 LF.Tactics <> x var
R10591:10591 LF.Tactics <> z var
R10572:10574 Coq.Init.Logic <> :type_scope:x_'='_x not
R10567:10570 LF.Poly <> ::x_'::'_x not
R10566:10566 LF.Tactics <> y var
R10571:10571 LF.Tactics <> l var
R10576:10579 LF.Poly <> ::x_'::'_x not
R10575:10575 LF.Tactics <> z var
R10580:10580 LF.Tactics <> j var
R10555:10557 Coq.Init.Logic <> :type_scope:x_'='_x not
R10545:10548 LF.Poly <> ::x_'::'_x not
R10544:10544 LF.Tactics <> x var
R10550:10553 LF.Poly <> ::x_'::'_x not
R10549:10549 LF.Tactics <> y var
R10554:10554 LF.Tactics <> l var
R10558:10559 LF.Poly <> ::'['_']' not
prf 11791:11797 <> f_equal
R11826:11829 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11830:11830 LF.Tactics <> B var
R11825:11825 LF.Tactics <> A var
R11839:11839 LF.Tactics <> A var
R11850:11853 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11857:11859 Coq.Init.Logic <> :type_scope:x_'='_x not
R11854:11854 LF.Tactics <> f var
R11856:11856 LF.Tactics <> x var
R11860:11860 LF.Tactics <> f var
R11862:11862 LF.Tactics <> y var
R11846:11848 Coq.Init.Logic <> :type_scope:x_'='_x not
R11845:11845 LF.Tactics <> x var
R11849:11849 LF.Tactics <> y var
prf 12365:12369 <> S_inj
R12387:12389 Coq.Init.Datatypes <> nat ind
R12397:12400 LF.Basics <> bool ind
R12432:12441 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12453:12455 Coq.Init.Logic <> :type_scope:x_'='_x not
R12442:12448 LF.Basics <> beq_nat def
R12452:12452 LF.Tactics <> m var
R12450:12450 LF.Tactics <> n var
R12456:12456 LF.Tactics <> b var
R12428:12430 Coq.Init.Logic <> :type_scope:x_'='_x not
R12409:12415 LF.Basics <> beq_nat def
R12424:12424 Coq.Init.Datatypes <> S constr
R12426:12426 LF.Tactics <> m var
R12418:12418 Coq.Init.Datatypes <> S constr
R12420:12420 LF.Tactics <> n var
R12431:12431 LF.Tactics <> b var
prf 13294:13300 <> silly3'
R13316:13318 Coq.Init.Datatypes <> nat ind
R13324:13324 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13373:13379 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13398:13404 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13409:13411 Coq.Init.Logic <> :type_scope:x_'='_x not
R13405:13408 LF.Basics <> true constr
R13412:13418 LF.Basics <> beq_nat def
R13421:13421 Coq.Init.Datatypes <> S constr
R13424:13424 Coq.Init.Datatypes <> S constr
R13426:13426 LF.Tactics <> n var
R13384:13386 Coq.Init.Logic <> :type_scope:x_'='_x not
R13380:13383 LF.Basics <> true constr
R13387:13393 LF.Basics <> beq_nat def
R13395:13395 LF.Tactics <> n var
R13343:13346 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13366:13368 Coq.Init.Logic <> :type_scope:x_'='_x not
R13347:13353 LF.Basics <> beq_nat def
R13356:13356 Coq.Init.Datatypes <> S constr
R13359:13359 Coq.Init.Datatypes <> S constr
R13361:13361 LF.Tactics <> n var
R13369:13372 LF.Basics <> true constr
R13336:13338 Coq.Init.Logic <> :type_scope:x_'='_x not
R13325:13331 LF.Basics <> beq_nat def
R13333:13333 LF.Tactics <> n var
R13339:13342 LF.Basics <> true constr
prf 14305:14322 <> plus_n_n_injective
R14356:14364 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14366:14368 Coq.Init.Logic <> :type_scope:x_'='_x not
R14365:14365 LF.Tactics <> n var
R14369:14369 LF.Tactics <> m var
R14348:14350 Coq.Init.Logic <> :type_scope:x_'='_x not
R14344:14346 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R14343:14343 LF.Tactics <> n var
R14347:14347 LF.Tactics <> n var
R14352:14354 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R14351:14351 LF.Tactics <> m var
R14355:14355 LF.Tactics <> m var
R14595:14603 LF.Induction <> plus_comm thm
R14595:14603 LF.Induction <> plus_comm thm
R14595:14603 LF.Induction <> plus_comm thm
R14653:14661 LF.Induction <> plus_comm thm
R14653:14661 LF.Induction <> plus_comm thm
R14653:14661 LF.Induction <> plus_comm thm
prf 15670:15692 <> double_injective_FAILED
R15732:15740 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15742:15744 Coq.Init.Logic <> :type_scope:x_'='_x not
R15741:15741 LF.Tactics <> n var
R15745:15745 LF.Tactics <> m var
R15721:15723 Coq.Init.Logic <> :type_scope:x_'='_x not
R15713:15718 LF.Induction <> double def
R15720:15720 LF.Tactics <> n var
R15724:15729 LF.Induction <> double def
R15731:15731 LF.Tactics <> m var
R16025:16031 LF.Tactics <> f_equal thm
R16025:16031 LF.Tactics <> f_equal thm
prf 18267:18282 <> double_injective
R18322:18330 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18332:18334 Coq.Init.Logic <> :type_scope:x_'='_x not
R18331:18331 LF.Tactics <> n var
R18335:18335 LF.Tactics <> m var
R18311:18313 Coq.Init.Logic <> :type_scope:x_'='_x not
R18303:18308 LF.Induction <> double def
R18310:18310 LF.Tactics <> n var
R18314:18319 LF.Induction <> double def
R18321:18321 LF.Tactics <> m var
R19208:19214 LF.Tactics <> f_equal thm
R19208:19214 LF.Tactics <> f_equal thm
prf 20115:20126 <> beq_nat_true
R20164:20167 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20169:20171 Coq.Init.Logic <> :type_scope:x_'='_x not
R20168:20168 LF.Tactics <> n var
R20172:20172 LF.Tactics <> m var
R20157:20159 Coq.Init.Logic <> :type_scope:x_'='_x not
R20146:20152 LF.Basics <> beq_nat def
R20156:20156 LF.Tactics <> m var
R20154:20154 LF.Tactics <> n var
R20160:20163 LF.Basics <> true constr
R20350:20356 LF.Tactics <> f_equal thm
R20350:20356 LF.Tactics <> f_equal thm
def 20646:20676 <> manual_grade_for_informal_proof
R20680:20685 Coq.Init.Datatypes <> option ind
R20688:20691 LF.Poly <> prod ind
R20697:20702 Coq.Strings.String <> string ind
R20693:20695 Coq.Init.Datatypes <> nat ind
R20708:20711 Coq.Init.Datatypes <> None constr
prf 21043:21071 <> double_injective_take2_FAILED
R21111:21119 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21121:21123 Coq.Init.Logic <> :type_scope:x_'='_x not
R21120:21120 LF.Tactics <> n var
R21124:21124 LF.Tactics <> m var
R21100:21102 Coq.Init.Logic <> :type_scope:x_'='_x not
R21092:21097 LF.Induction <> double def
R21099:21099 LF.Tactics <> n var
R21103:21108 LF.Induction <> double def
R21110:21110 LF.Tactics <> m var
R21404:21410 LF.Tactics <> f_equal thm
R21404:21410 LF.Tactics <> f_equal thm
prf 22346:22367 <> double_injective_take2
R22407:22415 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22417:22419 Coq.Init.Logic <> :type_scope:x_'='_x not
R22416:22416 LF.Tactics <> n var
R22420:22420 LF.Tactics <> m var
R22396:22398 Coq.Init.Logic <> :type_scope:x_'='_x not
R22388:22393 LF.Induction <> double def
R22395:22395 LF.Tactics <> n var
R22399:22404 LF.Induction <> double def
R22406:22406 LF.Tactics <> m var
R22883:22889 LF.Tactics <> f_equal thm
R22883:22889 LF.Tactics <> f_equal thm
prf 25089:25099 <> beq_id_true
R25134:25137 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25139:25141 Coq.Init.Logic <> :type_scope:x_'='_x not
R25138:25138 LF.Tactics <> x var
R25142:25142 LF.Tactics <> y var
R25127:25129 Coq.Init.Logic <> :type_scope:x_'='_x not
R25117:25122 LF.Lists <> beq_id def
R25126:25126 LF.Tactics <> y var
R25124:25124 LF.Tactics <> x var
R25130:25133 LF.Basics <> true constr
R25203:25205 Coq.Init.Logic <> :type_scope:x_'='_x not
R25203:25205 Coq.Init.Logic <> :type_scope:x_'='_x not
R25218:25229 LF.Tactics <> beq_nat_true thm
R25218:25229 LF.Tactics <> beq_nat_true thm
prf 25387:25406 <> nth_error_after_last
R25421:25423 Coq.Init.Datatypes <> nat ind
R25442:25445 LF.Poly <> list ind
R25447:25447 LF.Tactics <> X var
R25468:25476 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25490:25492 Coq.Init.Logic <> :type_scope:x_'='_x not
R25477:25485 LF.Poly <> nth_error def
R25489:25489 LF.Tactics <> n var
R25487:25487 LF.Tactics <> l var
R25493:25496 Coq.Init.Datatypes <> None constr
R25464:25466 Coq.Init.Logic <> :type_scope:x_'='_x not
R25456:25461 LF.Poly <> length def
R25463:25463 LF.Tactics <> l var
R25467:25467 LF.Tactics <> n var
def 25977:25982 <> square
R25990:25992 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R25989:25989 LF.Tactics <> n var
R25993:25993 LF.Tactics <> n var
prf 26064:26074 <> square_mult
R26104:26106 Coq.Init.Logic <> :type_scope:x_'='_x not
R26090:26095 LF.Tactics <> square def
R26099:26101 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R26098:26098 LF.Tactics <> n var
R26102:26102 LF.Tactics <> m var
R26115:26117 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R26107:26112 LF.Tactics <> square def
R26114:26114 LF.Tactics <> n var
R26118:26123 LF.Tactics <> square def
R26125:26125 LF.Tactics <> m var
R26442:26447 LF.Tactics <> square def
R26772:26781 LF.Induction <> mult_assoc thm
R26772:26781 LF.Induction <> mult_assoc thm
R26772:26781 LF.Induction <> mult_assoc thm
R26807:26809 Coq.Init.Logic <> :type_scope:x_'='_x not
R26803:26805 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R26799:26801 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R26815:26817 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R26811:26813 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R26807:26809 Coq.Init.Logic <> :type_scope:x_'='_x not
R26803:26805 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R26799:26801 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R26815:26817 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R26811:26813 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R26834:26842 LF.Induction <> mult_comm thm
R26834:26842 LF.Induction <> mult_comm thm
R26834:26842 LF.Induction <> mult_comm thm
R26851:26860 LF.Induction <> mult_assoc thm
R26851:26860 LF.Induction <> mult_assoc thm
R26886:26895 LF.Induction <> mult_assoc thm
R26886:26895 LF.Induction <> mult_assoc thm
R26886:26895 LF.Induction <> mult_assoc thm
def 27283:27285 <> foo
R27291:27293 Coq.Init.Datatypes <> nat ind
prf 27506:27517 <> silly_fact_1
R27540:27542 Coq.Init.Logic <> :type_scope:x_'='_x not
R27536:27538 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R27531:27533 LF.Tactics <> foo def
R27535:27535 LF.Tactics <> m var
R27554:27556 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R27543:27545 LF.Tactics <> foo def
R27549:27551 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R27548:27548 LF.Tactics <> m var
def 27787:27789 <> bar
R27804:27804 LF.Tactics <> x var
R27815:27815 Coq.Init.Datatypes <> O constr
R27826:27826 Coq.Init.Datatypes <> S constr
prf 27900:27918 <> silly_fact_2_FAILED
R27941:27943 Coq.Init.Logic <> :type_scope:x_'='_x not
R27937:27939 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R27932:27934 LF.Tactics <> bar def
R27936:27936 LF.Tactics <> m var
R27955:27957 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R27944:27946 LF.Tactics <> bar def
R27950:27952 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R27949:27949 LF.Tactics <> m var
prf 28946:28957 <> silly_fact_2
R28980:28982 Coq.Init.Logic <> :type_scope:x_'='_x not
R28976:28978 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R28971:28973 LF.Tactics <> bar def
R28975:28975 LF.Tactics <> m var
R28994:28996 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R28983:28985 LF.Tactics <> bar def
R28989:28991 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R28988:28988 LF.Tactics <> m var
prf 29347:29359 <> silly_fact_2'
R29382:29384 Coq.Init.Logic <> :type_scope:x_'='_x not
R29378:29380 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R29373:29375 LF.Tactics <> bar def
R29377:29377 LF.Tactics <> m var
R29396:29398 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R29385:29387 LF.Tactics <> bar def
R29391:29393 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R29390:29390 LF.Tactics <> m var
R29430:29432 LF.Tactics <> bar def
def 30076:30083 <> sillyfun
R30090:30092 Coq.Init.Datatypes <> nat ind
R30097:30100 LF.Basics <> bool ind
R30110:30116 LF.Basics <> beq_nat def
R30118:30118 LF.Tactics <> n var
R30143:30149 LF.Basics <> beq_nat def
R30151:30151 LF.Tactics <> n var
R30173:30177 LF.Basics <> false constr
R30160:30164 LF.Basics <> false constr
R30127:30131 LF.Basics <> false constr
prf 30189:30202 <> sillyfun_false
R30218:30220 Coq.Init.Datatypes <> nat ind
R30236:30238 Coq.Init.Logic <> :type_scope:x_'='_x not
R30226:30233 LF.Tactics <> sillyfun def
R30235:30235 LF.Tactics <> n var
R30239:30243 LF.Basics <> false constr
R30272:30279 LF.Tactics <> sillyfun def
R30294:30300 LF.Basics <> beq_nat def
R30294:30300 LF.Basics <> beq_nat def
R30394:30400 LF.Basics <> beq_nat def
R30394:30400 LF.Basics <> beq_nat def
def 31291:31295 <> split
R31315:31318 LF.Poly <> list ind
R31322:31322 LF.Poly <> :type_scope:x_'*'_x not
R31321:31321 LF.Tactics <> X var
R31323:31323 LF.Tactics <> Y var
R31344:31344 LF.Poly <> :type_scope:x_'*'_x not
R31351:31355 LF.Poly <> :type_scope:x_'*'_x not
R31362:31362 LF.Poly <> :type_scope:x_'*'_x not
R31345:31348 LF.Poly <> list ind
R31350:31350 LF.Tactics <> X var
R31356:31359 LF.Poly <> list ind
R31361:31361 LF.Tactics <> Y var
R31375:31375 LF.Tactics <> l var
R31386:31387 LF.Poly <> ::'['_']' not
R31392:31392 LF.Poly <> ::'('_x_','_x_')' not
R31395:31396 LF.Poly <> ::'('_x_','_x_')' not
R31399:31399 LF.Poly <> ::'('_x_','_x_')' not
R31393:31394 LF.Poly <> ::'['_']' not
R31397:31398 LF.Poly <> ::'['_']' not
R31411:31414 LF.Poly <> ::x_'::'_x not
R31405:31405 LF.Poly <> ::'('_x_','_x_')' not
R31407:31408 LF.Poly <> ::'('_x_','_x_')' not
R31410:31410 LF.Poly <> ::'('_x_','_x_')' not
R31432:31436 LF.Tactics <> split def
R31453:31453 LF.Poly <> ::'('_x_','_x_')' not
R31456:31457 LF.Poly <> ::'('_x_','_x_')' not
R31460:31460 LF.Poly <> ::'('_x_','_x_')' not
R31465:31465 LF.Poly <> ::'('_x_','_x_')' not
R31473:31474 LF.Poly <> ::'('_x_','_x_')' not
R31482:31482 LF.Poly <> ::'('_x_','_x_')' not
R31467:31470 LF.Poly <> ::x_'::'_x not
R31476:31479 LF.Poly <> ::x_'::'_x not
prf 31592:31604 <> combine_split
R31624:31627 LF.Poly <> list ind
R31631:31633 LF.Poly <> :type_scope:x_'*'_x not
R31630:31630 LF.Tactics <> X var
R31634:31634 LF.Tactics <> Y var
R31665:31670 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31684:31686 Coq.Init.Logic <> :type_scope:x_'='_x not
R31671:31677 LF.Poly <> combine def
R31682:31683 LF.Tactics <> l2 var
R31679:31680 LF.Tactics <> l1 var
R31687:31687 LF.Tactics <> l var
R31654:31656 Coq.Init.Logic <> :type_scope:x_'='_x not
R31647:31651 LF.Tactics <> split def
R31653:31653 LF.Tactics <> l var
R31657:31657 LF.Poly <> ::'('_x_','_x_')' not
R31660:31661 LF.Poly <> ::'('_x_','_x_')' not
R31664:31664 LF.Poly <> ::'('_x_','_x_')' not
R31658:31659 LF.Tactics <> l1 var
R31662:31663 LF.Tactics <> l2 var
R31819:31823 LF.Tactics <> split def
R31819:31823 LF.Tactics <> split def
R31886:31888 Coq.Init.Logic <> :type_scope:x_'='_x not
R31873:31879 LF.Poly <> combine def
R31886:31888 Coq.Init.Logic <> :type_scope:x_'='_x not
R31873:31879 LF.Poly <> combine def
def 32222:32230 <> sillyfun1
R32237:32239 Coq.Init.Datatypes <> nat ind
R32244:32247 LF.Basics <> bool ind
R32257:32263 LF.Basics <> beq_nat def
R32265:32265 LF.Tactics <> n var
R32289:32295 LF.Basics <> beq_nat def
R32297:32297 LF.Tactics <> n var
R32318:32322 LF.Basics <> false constr
R32306:32309 LF.Basics <> true constr
R32274:32277 LF.Basics <> true constr
prf 32581:32600 <> sillyfun1_odd_FAILED
R32616:32618 Coq.Init.Datatypes <> nat ind
R32645:32653 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32660:32662 Coq.Init.Logic <> :type_scope:x_'='_x not
R32654:32657 LF.Basics <> oddb def
R32659:32659 LF.Tactics <> n var
R32663:32666 LF.Basics <> true constr
R32638:32640 Coq.Init.Logic <> :type_scope:x_'='_x not
R32627:32635 LF.Tactics <> sillyfun1 def
R32637:32637 LF.Tactics <> n var
R32641:32644 LF.Basics <> true constr
R32698:32706 LF.Tactics <> sillyfun1 def
R32727:32733 LF.Basics <> beq_nat def
R32727:32733 LF.Basics <> beq_nat def
prf 33583:33595 <> sillyfun1_odd
R33611:33613 Coq.Init.Datatypes <> nat ind
R33640:33648 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33655:33657 Coq.Init.Logic <> :type_scope:x_'='_x not
R33649:33652 LF.Basics <> oddb def
R33654:33654 LF.Tactics <> n var
R33658:33661 LF.Basics <> true constr
R33633:33635 Coq.Init.Logic <> :type_scope:x_'='_x not
R33622:33630 LF.Tactics <> sillyfun1 def
R33632:33632 LF.Tactics <> n var
R33636:33639 LF.Basics <> true constr
R33693:33701 LF.Tactics <> sillyfun1 def
R33722:33728 LF.Basics <> beq_nat def
R33722:33728 LF.Basics <> beq_nat def
R33977:33988 LF.Tactics <> beq_nat_true thm
R33977:33988 LF.Tactics <> beq_nat_true thm
R34275:34281 LF.Basics <> beq_nat def
R34275:34281 LF.Basics <> beq_nat def
R34341:34352 LF.Tactics <> beq_nat_true thm
R34341:34352 LF.Tactics <> beq_nat_true thm
prf 34516:34537 <> bool_fn_applied_thrice
R34559:34562 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34563:34566 LF.Basics <> bool ind
R34555:34558 LF.Basics <> bool ind
R34574:34577 LF.Basics <> bool ind
R34594:34596 Coq.Init.Logic <> :type_scope:x_'='_x not
R34583:34583 LF.Tactics <> f var
R34586:34586 LF.Tactics <> f var
R34589:34589 LF.Tactics <> f var
R34591:34591 LF.Tactics <> b var
R34597:34597 LF.Tactics <> f var
R34599:34599 LF.Tactics <> b var
R34653:34656 LF.Basics <> true constr
R34670:34674 LF.Basics <> false constr
R34653:34656 LF.Basics <> true constr
R34670:34674 LF.Basics <> false constr
R34670:34674 LF.Basics <> false constr
prf 37324:37334 <> beq_nat_sym
R37352:37354 Coq.Init.Datatypes <> nat ind
R37371:37373 Coq.Init.Logic <> :type_scope:x_'='_x not
R37360:37366 LF.Basics <> beq_nat def
R37370:37370 LF.Tactics <> m var
R37368:37368 LF.Tactics <> n var
R37374:37380 LF.Basics <> beq_nat def
R37384:37384 LF.Tactics <> n var
R37382:37382 LF.Tactics <> m var
R37437:37443 LF.Basics <> beq_nat def
R37463:37469 LF.Basics <> beq_nat def
R37437:37443 LF.Basics <> beq_nat def
R37463:37469 LF.Basics <> beq_nat def
R37463:37469 LF.Basics <> beq_nat def
R37515:37526 LF.Tactics <> beq_nat_true thm
R37515:37526 LF.Tactics <> beq_nat_true thm
R37583:37594 LF.Induction <> beq_nat_refl thm
R37583:37594 LF.Induction <> beq_nat_refl thm
R37583:37594 LF.Induction <> beq_nat_refl thm
R37635:37646 LF.Tactics <> beq_nat_true thm
R37635:37646 LF.Tactics <> beq_nat_true thm
R37703:37714 LF.Induction <> beq_nat_refl thm
R37703:37714 LF.Induction <> beq_nat_refl thm
R37703:37714 LF.Induction <> beq_nat_refl thm
prf 38120:38132 <> beq_nat_trans
R38170:38175 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38194:38199 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38211:38213 Coq.Init.Logic <> :type_scope:x_'='_x not
R38200:38206 LF.Basics <> beq_nat def
R38210:38210 LF.Tactics <> p var
R38208:38208 LF.Tactics <> n var
R38214:38217 LF.Basics <> true constr
R38187:38189 Coq.Init.Logic <> :type_scope:x_'='_x not
R38176:38182 LF.Basics <> beq_nat def
R38186:38186 LF.Tactics <> p var
R38184:38184 LF.Tactics <> m var
R38190:38193 LF.Basics <> true constr
R38163:38165 Coq.Init.Logic <> :type_scope:x_'='_x not
R38152:38158 LF.Basics <> beq_nat def
R38162:38162 LF.Tactics <> m var
R38160:38160 LF.Tactics <> n var
R38166:38169 LF.Basics <> true constr
R38266:38277 LF.Tactics <> beq_nat_true thm
R38266:38277 LF.Tactics <> beq_nat_true thm
R38291:38302 LF.Tactics <> beq_nat_true thm
R38291:38302 LF.Tactics <> beq_nat_true thm
R38358:38369 LF.Induction <> beq_nat_refl thm
R38358:38369 LF.Induction <> beq_nat_refl thm
R38358:38369 LF.Induction <> beq_nat_refl thm
def 39097:39119 <> split_combine_statement
R39237:39240 LF.Poly <> list ind
R39242:39242 LF.Tactics <> X var
R39249:39252 LF.Poly <> list ind
R39256:39258 LF.Poly <> :type_scope:x_'*'_x not
R39255:39255 LF.Tactics <> X var
R39259:39259 LF.Tactics <> X var
R39289:39296 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39314:39321 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39329:39331 Coq.Init.Logic <> :type_scope:x_'='_x not
R39322:39326 LF.Tactics <> split def
R39328:39328 LF.Tactics <> l var
R39332:39332 LF.Poly <> ::'('_x_','_x_')' not
R39335:39336 LF.Poly <> ::'('_x_','_x_')' not
R39339:39339 LF.Poly <> ::'('_x_','_x_')' not
R39333:39334 LF.Tactics <> l1 var
R39337:39338 LF.Tactics <> l2 var
R39298:39300 Coq.Init.Logic <> :type_scope:x_'='_x not
R39297:39297 LF.Tactics <> l var
R39301:39307 LF.Poly <> combine def
R39312:39313 LF.Tactics <> l2 var
R39309:39310 LF.Tactics <> l1 var
R39277:39279 Coq.Init.Logic <> :type_scope:x_'='_x not
R39268:39273 LF.Poly <> length def
R39275:39276 LF.Tactics <> l1 var
R39280:39285 LF.Poly <> length def
R39287:39288 LF.Tactics <> l2 var
prf 39351:39363 <> split_combine
R39367:39389 LF.Tactics <> split_combine_statement def
def 39857:39886 <> manual_grade_for_split_combine
R39890:39895 Coq.Init.Datatypes <> option ind
R39898:39901 LF.Poly <> prod ind
R39907:39912 Coq.Strings.String <> string ind
R39903:39905 Coq.Init.Datatypes <> nat ind
R39918:39921 Coq.Init.Datatypes <> None constr
prf 40103:40117 <> filter_exercise
R40148:40151 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40152:40155 LF.Basics <> bool ind
R40147:40147 LF.Tactics <> X var
R40192:40192 LF.Tactics <> X var
R40203:40206 LF.Poly <> list ind
R40208:40208 LF.Tactics <> X var
R40240:40248 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40255:40257 Coq.Init.Logic <> :type_scope:x_'='_x not
R40249:40252 LF.Tactics <> test var
R40254:40254 LF.Tactics <> x var
R40258:40261 LF.Basics <> true constr
R40230:40232 Coq.Init.Logic <> :type_scope:x_'='_x not
R40217:40222 LF.Poly <> filter def
R40229:40229 LF.Tactics <> l var
R40224:40227 LF.Tactics <> test var
R40234:40237 LF.Poly <> ::x_'::'_x not
R40233:40233 LF.Tactics <> x var
R40238:40239 LF.Tactics <> lf var
def 41443:41449 <> forallb
R41469:41472 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41473:41476 LF.Basics <> bool ind
R41468:41468 LF.Tactics <> X var
R41483:41486 LF.Poly <> list ind
R41488:41488 LF.Tactics <> X var
R41493:41496 LF.Basics <> bool ind
R41507:41507 LF.Tactics <> l var
R41518:41519 LF.Poly <> ::'['_']' not
R41524:41527 LF.Basics <> true constr
R41534:41537 LF.Poly <> ::x_'::'_x not
R41547:41550 LF.Tactics <> test var
R41580:41584 LF.Basics <> false constr
R41559:41565 LF.Tactics <> forallb def
R41567:41570 LF.Tactics <> test var
def 41604:41610 <> existsb
R41630:41633 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41634:41637 LF.Basics <> bool ind
R41629:41629 LF.Tactics <> X var
R41644:41647 LF.Poly <> list ind
R41649:41649 LF.Tactics <> X var
R41654:41657 LF.Basics <> bool ind
R41668:41668 LF.Tactics <> l var
R41679:41680 LF.Poly <> ::'['_']' not
R41685:41689 LF.Basics <> false constr
R41696:41699 LF.Poly <> ::x_'::'_x not
R41709:41712 LF.Tactics <> test var
R41731:41737 LF.Tactics <> existsb def
R41739:41742 LF.Tactics <> test var
R41721:41724 LF.Basics <> true constr
def 41763:41776 <> test_forallb_1
R41803:41805 Coq.Init.Logic <> :type_scope:x_'='_x not
R41779:41785 LF.Tactics <> forallb def
R41792:41792 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41794:41794 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41796:41796 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41798:41798 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41800:41800 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41802:41802 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41787:41790 LF.Basics <> oddb def
R41806:41809 LF.Basics <> true constr
def 41839:41852 <> test_forallb_2
R41881:41883 Coq.Init.Logic <> :type_scope:x_'='_x not
R41855:41861 LF.Tactics <> forallb def
R41868:41868 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41874:41874 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41880:41880 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41869:41873 LF.Basics <> false constr
R41875:41879 LF.Basics <> false constr
R41863:41866 LF.Basics <> negb def
R41884:41887 LF.Basics <> true constr
def 41917:41930 <> test_forallb_3
R41956:41958 Coq.Init.Logic <> :type_scope:x_'='_x not
R41933:41939 LF.Tactics <> forallb def
R41947:41947 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41949:41949 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41951:41951 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41953:41953 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41955:41955 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41941:41945 LF.Basics <> evenb def
R41959:41963 LF.Basics <> false constr
def 41993:42006 <> test_forallb_4
R42031:42033 Coq.Init.Logic <> :type_scope:x_'='_x not
R42009:42015 LF.Tactics <> forallb def
R42029:42030 LF.Poly <> ::'['_']' not
R42018:42024 LF.Basics <> beq_nat def
R42034:42037 LF.Basics <> true constr
def 42067:42080 <> test_existsb_1
R42112:42114 Coq.Init.Logic <> :type_scope:x_'='_x not
R42083:42089 LF.Tactics <> existsb def
R42103:42103 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R42105:42105 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R42107:42107 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R42109:42109 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R42111:42111 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R42092:42098 LF.Basics <> beq_nat def
R42115:42119 LF.Basics <> false constr
def 42149:42162 <> test_existsb_2
R42202:42204 Coq.Init.Logic <> :type_scope:x_'='_x not
R42165:42171 LF.Tactics <> existsb def
R42185:42185 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R42190:42190 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R42195:42195 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R42201:42201 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R42186:42189 LF.Basics <> true constr
R42191:42194 LF.Basics <> true constr
R42196:42200 LF.Basics <> false constr
R42174:42177 LF.Basics <> andb def
R42179:42182 LF.Basics <> true constr
R42205:42208 LF.Basics <> true constr
def 42238:42251 <> test_existsb_3
R42280:42282 Coq.Init.Logic <> :type_scope:x_'='_x not
R42254:42260 LF.Tactics <> existsb def
R42267:42267 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R42269:42269 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R42271:42271 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R42273:42273 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R42275:42275 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R42277:42277 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R42279:42279 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R42262:42265 LF.Basics <> oddb def
R42283:42286 LF.Basics <> true constr
def 42316:42329 <> test_existsb_4
R42348:42350 Coq.Init.Logic <> :type_scope:x_'='_x not
R42332:42338 LF.Tactics <> existsb def
R42346:42347 LF.Poly <> ::'['_']' not
R42340:42344 LF.Basics <> evenb def
R42351:42355 LF.Basics <> false constr
def 42389:42396 <> existsb'
R42416:42419 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42420:42423 LF.Basics <> bool ind
R42415:42415 LF.Tactics <> X var
R42430:42433 LF.Poly <> list ind
R42435:42435 LF.Tactics <> X var
R42440:42443 LF.Basics <> bool ind
R42448:42451 LF.Basics <> negb def
R42454:42460 LF.Tactics <> forallb def
R42492:42492 LF.Tactics <> l var
R42471:42471 LF.Tactics <> X var
R42477:42480 LF.Basics <> negb def
R42483:42486 LF.Tactics <> test var
R42488:42488 LF.Tactics <> x var
prf 42505:42520 <> existsb_existsb'
R42540:42543 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42544:42547 LF.Basics <> bool ind
R42539:42539 LF.Tactics <> X var
R42554:42557 LF.Poly <> list ind
R42559:42559 LF.Tactics <> X var
R42603:42605 Coq.Init.Logic <> :type_scope:x_'='_x not
R42589:42595 LF.Tactics <> existsb def
R42602:42602 LF.Tactics <> l var
R42597:42600 LF.Tactics <> test var
R42606:42613 LF.Tactics <> existsb' def
R42620:42620 LF.Tactics <> l var
R42615:42618 LF.Tactics <> test var
R42720:42727 LF.Tactics <> existsb' def
R42785:42792 LF.Tactics <> existsb' def
def 42895:42934 <> manual_grade_for_forall_exists_challenge
R42938:42943 Coq.Init.Datatypes <> option ind
R42946:42949 LF.Poly <> prod ind
R42955:42960 Coq.Strings.String <> string ind
R42951:42953 Coq.Init.Datatypes <> nat ind
R42966:42969 Coq.Init.Datatypes <> None constr
